-- Connect as a system user (like SYS or SYSTEM) to create a new user and grant privileges
-- This script runs inside the container as part of the gvenzl/oracle-free setup.

-- Drop user if exists to ensure clean slate for lab
WHENEVER SQLERROR CONTINUE;
DROP USER C##LAB_USER CASCADE;
WHENEVER SQLERROR EXIT;

-- Create a common user for the lab (requires C## prefix for multitenant)
CREATE USER C##LAB_USER IDENTIFIED BY lab_password DEFAULT TABLESPACE USERS QUOTA UNLIMITED ON USERS;

-- Grant necessary privileges to the lab user
GRANT CONNECT, RESOURCE, CREATE SESSION, CREATE TABLE, CREATE SEQUENCE, CREATE TRIGGER TO C##LAB_USER;
GRANT CREATE VIEW TO C##LAB_USER; -- Grant create view for v$version like access simulation if needed, though not directly used now

-- Connect as the newly created user to create tables and insert data
-- This is implicitly handled by docker-entrypoint-initdb.d which runs as SYSDBA and can run as C##LAB_USER
-- For gvenzl/oracle-free, scripts run as system, and then it automatically switches to the PDB user if it exists.
-- The provided solution sets up `lab_user` in the PDB.

ALTER SESSION SET CURRENT_SCHEMA = C##LAB_USER;

-- Create the products table
CREATE TABLE products (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- IDENTITY column for auto-increment
    name VARCHAR2(255) NOT NULL,
    category VARCHAR2(255),
    price NUMBER(10, 2),
    description CLOB -- CLOB for potentially large text
);

-- Insert sample data
INSERT INTO products (name, category, price, description) VALUES
('Oracle Database Guide', 'Books', 49.99, 'Comprehensive guide to Oracle Database administration.');
INSERT INTO products (name, category, price, description) VALUES
('SQL Developer Handbook', 'Books', 35.00, 'Practical handbook for SQL Developer users.');
INSERT INTO products (name, category, price, description) VALUES
('Exadata Machine X10', 'Hardware', 150000.00, 'High-performance database machine for enterprise.');
INSERT INTO products (name, category, price, description) VALUES
('Java Microservices with WebLogic', 'Software', 599.00, 'Develop microservices using Oracle WebLogic Server.');
INSERT INTO products (name, category, price, description) VALUES
('Cloud Infrastructure Services', 'Cloud', 999.00, 'Subscription for Oracle Cloud Infrastructure services.');
INSERT INTO products (name, category, price, description) VALUES
('Autonomous Database Access', 'Cloud', 750.00, 'Access to Oracle Autonomous Database.'),
('Application Server License', 'Software', 2500.00, 'License for Oracle Application Server.');

COMMIT;

-- Grant C##LAB_USER access to V$VERSION and DUAL for educational purposes
-- Note: V$VERSION is typically a public synonym. DUAL is also public.
-- This part is usually not needed as these are public.
-- If the lab user needs to access other system views, explicit grants would be required.
-- GRANT SELECT ON SYS.V_$VERSION TO C##LAB_USER;
-- GRANT SELECT ON SYS.DUAL TO C##LAB_USER;

-- Final check (optional, for debugging init script)
-- SELECT USER FROM DUAL;
-- SELECT ID, NAME FROM PRODUCTS;